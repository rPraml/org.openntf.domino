<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.openntf.domino</groupId>
		<artifactId>root</artifactId>
		<version>1.5.1-SNAPSHOT</version>
	</parent>
	
	<artifactId>core</artifactId>
	<name>OpenNTF Domino API core</name>
	<description>The drop-in replacement for the IBM-supported lotus.domino API</description>

	<packaging>bundle</packaging>
	<build>
		<plugins>
			<plugin>  
				<groupId>org.apache.felix</groupId>
				<artifactId>maven-bundle-plugin</artifactId>
				<version>2.5.3</version>
				<extensions>true</extensions>
				<configuration>
					<singleton>true</singleton>
					<instructions>

						<!-- TODO 1: We must specify exportPackage, otherwise .impl. is not exported -->
						<!-- TODO 2: move domino.impl to own package and remove exportPackage -->
						<Export-Package>
							!*.test,
							org.openntf.domino.*,
							org.openntf.arpa,
							org.openntf.calendars
						</Export-Package>

						<Bundle-SymbolicName>${project.groupId}.${project.artifactId};singleton:=true</Bundle-SymbolicName>
						<Bundle-ActivationPolicy>lazy</Bundle-ActivationPolicy>
						<Import-Package>
							org.junit.*;resolution:=optional,
							*
						</Import-Package>
  
  						<!-- BND generated import-packages does not work in DominoServer -->
  						<!-- 
  							so we import just lotus.domino	(do not know why, it was several times added to original MANIFEST.MF 
   						
  						
 						
 
						<Require-Bundle>
							com.ibm.notes.java.api;bundle-version="[8.5.3,10.0.0)",
							com.ibm.domino.napi;bundle-version="[9.0.1,10.0.0)";visibility=reexport,
							com.ibm.commons;bundle-version="[9.0.0,10.0.0)",
							org.javolution.core-java;bundle-version="[6.1.0,7.0.0)",
							org.openntf.formula;bundle-version="1.5.0";visibility=reexport
						</Require-Bundle>
-->
					</instructions>
				</configuration>
			
			</plugin>

            <plugin>
                <groupId>pl.project13.maven</groupId>
                <artifactId>git-commit-id-plugin</artifactId>
                <version>2.1.15</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>revision</goal>
                         </goals>
                    </execution>
                </executions>

                <configuration>

                    <!-- Default value is dd.MM.yyyy '@' HH:mm:ss z -->
                    <dateFormat>yyyy-MM-dd HH:mm:ss</dateFormat>

                    <!-- this is false by default, forces the plugin to generate the git.properties file -->
                    <generateGitPropertiesFile>true</generateGitPropertiesFile>

                    <!-- The path for the to be generated properties file, it's relative to ${project.basedir} -->
                    <generateGitPropertiesFilename>src/main/resources/${project.groupId}.${project.artifactId}.git.properties</generateGitPropertiesFilename>

                    <!-- @since 2.1.0 -->
                    <!-- 
                        read up about git-describe on the in man, or it's homepage - it's a really powerful versioning helper 
                        and the recommended way to use git-commit-id-plugin. The configuration bellow is optional, 
                        by default describe will run "just like git-describe on the command line", even though it's a JGit reimplementation.
                    -->
                    <gitDescribe>

                        <!-- don't generate the describe property -->
                        <skip>false</skip>

                        <!-- 
                            if no tag was found "near" this commit, just print the commit's id instead, 
                            helpful when you always expect this field to be not-empty 
                        -->
                        <always>false</always>
                        <!--
                             how many chars should be displayed as the commit object id? 
                             7 is git's default, 
                             0 has a special meaning (see end of this README.md), 
                             and 40 is the maximum value here 
                        -->
                        <abbrev>7</abbrev>

                        <!-- when the build is triggered while the repo is in "dirty state", append this suffix -->
                        <dirty>-dirty</dirty>

                        <!-- Only consider tags matching the given pattern. This can be used to avoid leaking private tags from the repository. -->
                        <match>*</match>

                        <!-- 
                             always print using the "tag-commits_from_tag-g_commit_id-maybe_dirty" format, even if "on" a tag. 
                             The distance will always be 0 if you're "on" the tag. 
                        -->
                        <forceLongFormat>false</forceLongFormat>
                    </gitDescribe>
                </configuration>

            </plugin>

		</plugins>
	</build>

	<dependencies>

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.11</version>
			<scope>provided</scope>
		</dependency>
		
		<!-- The notes-api is bundled by the ibm-build-management -->
		<dependency>
			<groupId>com.ibm.notes</groupId>
			<artifactId>java.api</artifactId>
			<version>9.0.1</version>
		</dependency>
		
		<dependency>
			<groupId>com.ibm.domino</groupId>
			<artifactId>napi</artifactId>
			<version>9.0.1</version>
		</dependency>
		
		
		<!-- add to plugin -->
		<dependency>
			<groupId>com.ibm.commons</groupId>
			<artifactId>com.ibm.commons</artifactId>
			<version>9.0.1</version>
		</dependency>
		
		<!-- Javolution: needed by the CD-stuff -->		
		<dependency>
			<groupId>org.javolution</groupId>
			<artifactId>javolution-core-java</artifactId>
			<version>6.1.0-ODA-151-SNAPSHOT</version>
		</dependency> 
		
		<dependency>
			<groupId>org.openntf</groupId>
			<artifactId>formula</artifactId>
			<version>1.5.1-SNAPSHOT</version>
		</dependency>
		
		<dependency>
			<groupId>org.openntf.domino</groupId>
			<artifactId>commons</artifactId>
			<version>1.5.1-SNAPSHOT</version>
		</dependency>
		
		<!-- TODO: Remove these Deps if separated in a own project 
		<dependency>
			<groupId>com.tinkerpop.blueprints</groupId>
			<artifactId>blueprints-core</artifactId>
			<version>2.6.0</version>
		</dependency>
		
		<dependency>
			<groupId>com.tinkerpop</groupId>
			<artifactId>frames</artifactId>
			<version>2.6.0</version>
		</dependency>
		-->
	</dependencies>

	<organization>
		<name>OpenNTF</name>
		<url>http://www.openntf.org</url>
	</organization>
</project>